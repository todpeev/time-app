/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Time;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.SpinnerNumberModel;
/**
 *
 * @author peevto
 */
public class OptionFrame extends javax.swing.JFrame {
    /**
     * Creates new form OptionFrame
     * @param app -the parent timer application
     * calling this window
     */
    public OptionFrame(App app) {
        super("Configure alarms");
        try 
        {
            alarmImage = ImageIO.read((getClass().getResource("image/alarm.jpg")));         
        } catch (IOException ex) 
        {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
        parentApplication = app;
        initComponents();
        setLocationRelativeTo(parentApplication);
        initElementArrays();
        getAlarmInfo();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setVisible(true);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabelAlarm1 = new javax.swing.JLabel();
        jSpinnerAlarm1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaAlarm1 = new javax.swing.JTextArea();
        jCheckBoxAlarm1 = new javax.swing.JCheckBox();
        jButtonAlarm1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabeAlarm2 = new javax.swing.JLabel();
        jSpinnerAlarm2 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxAlarm2 = new javax.swing.JCheckBox();
        jButtonAlarm2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaAlarm2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabelAlarm3 = new javax.swing.JLabel();
        jSpinnerAlarm3 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jCheckBoxAlarm3 = new javax.swing.JCheckBox();
        jButtonAlarm3 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaAlarm3 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jSpinnerAlarm4 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxAlarm4 = new javax.swing.JCheckBox();
        jButtonAlarm4 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaAlarm4 = new javax.swing.JTextArea();
        jSpinnerAlarm5 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(alarmImage);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Timer Alarm 1"));
        jLabelAlarm1.setText("Time interval (minutes):");
        jSpinnerAlarm1.setModel(new javax.swing.SpinnerNumberModel(45, 3, 60, 1));
        jSpinnerAlarm1.setEnabled(false);
        jSpinnerAlarm1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAlarm1StateChanged(evt);
            }
        });
        jLabel2.setText("Timer Alarm 1 Text:");
        jTextAreaAlarm1.setEditable(false);
        jTextAreaAlarm1.setColumns(15);
        jTextAreaAlarm1.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaAlarm1.setRows(2);
        jTextAreaAlarm1.setText("Time for microbrak!");
        jScrollPane2.setViewportView(jTextAreaAlarm1);
        jCheckBoxAlarm1.setText("Enable this Alarm");
        jCheckBoxAlarm1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAlarm1StateChanged(evt);
            }
        });
        jCheckBoxAlarm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlarm1ActionPerformed(evt);
            }
        });
        jButtonAlarm1.setText("Edit");
        jButtonAlarm1.setEnabled(false);
        jButtonAlarm1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAlarm1MouseClicked(evt);
            }
        });
        jButtonAlarm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlarm1ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonAlarm1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelAlarm1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerAlarm1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))))))
            .addComponent(jCheckBoxAlarm1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxAlarm1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlarm1)
                    .addComponent(jSpinnerAlarm1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAlarm1)
                .addGap(10, 10, 10))
        );
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Timer Alarm 2"));
        jLabeAlarm2.setText("Time interval (minutes):");
        jSpinnerAlarm2Max = (Integer)jSpinnerAlarm1.getValue()-1;
        jSpinnerAlarm2.setModel(new javax.swing.SpinnerNumberModel(15, 2, jSpinnerAlarm2Max, 1));
        jSpinnerAlarm2.setEnabled(false);
        jSpinnerAlarm2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAlarm2StateChanged(evt);
            }
        });
        jLabel4.setText("Timer Alarm 2 Text:");
        jCheckBoxAlarm2.setText("Enable this Alarm");
        jCheckBoxAlarm2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAlarm2StateChanged(evt);
            }
        });
        jCheckBoxAlarm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlarm2ActionPerformed(evt);
            }
        });
        jButtonAlarm2.setText("Edit");
        jButtonAlarm2.setEnabled(false);
        jButtonAlarm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlarm2ActionPerformed(evt);
            }
        });
        jTextAreaAlarm2.setEditable(false);
        jTextAreaAlarm2.setColumns(15);
        jTextAreaAlarm2.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaAlarm2.setRows(2);
        jScrollPane5.setViewportView(jTextAreaAlarm2);
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxAlarm2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonAlarm2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabeAlarm2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinnerAlarm2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane5)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jCheckBoxAlarm2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeAlarm2)
                    .addComponent(jSpinnerAlarm2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jButtonAlarm2)
                .addGap(10, 10, 10))
        );
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Timer Alarm 3"));
        jLabelAlarm3.setText("Time interval (minutes):");
        int jSpinnerAlarm3Max = (Integer)jSpinnerAlarm2.getValue()-1;
        jSpinnerAlarm3.setModel(new javax.swing.SpinnerNumberModel(5, 1, jSpinnerAlarm3Max, 1));
        jSpinnerAlarm3.setEnabled(false);
        jLabel6.setText("Timer Alarm 3 Text:");
        jCheckBoxAlarm3.setText("Enable this Alarm");
        jCheckBoxAlarm3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAlarm3StateChanged(evt);
            }
        });
        jCheckBoxAlarm3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlarm3ActionPerformed(evt);
            }
        });
        jButtonAlarm3.setText("Edit");
        jButtonAlarm3.setEnabled(false);
        jButtonAlarm3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlarm3ActionPerformed(evt);
            }
        });
        jTextAreaAlarm3.setEditable(false);
        jTextAreaAlarm3.setColumns(15);
        jTextAreaAlarm3.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaAlarm3.setRows(2);
        jScrollPane6.setViewportView(jTextAreaAlarm3);
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelAlarm3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerAlarm3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addComponent(jCheckBoxAlarm3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAlarm3))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxAlarm3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlarm3)
                    .addComponent(jSpinnerAlarm3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAlarm3)
                .addContainerGap())
        );
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Clock Alarm"));
        jSpinnerAlarm4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        jSpinnerAlarm4.setEnabled(false);
        jLabel7.setText("Clock Alarm Text:");
        jCheckBoxAlarm4.setText("Enable this Alarm");
        jCheckBoxAlarm4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAlarm4StateChanged(evt);
            }
        });
        jCheckBoxAlarm4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxAlarm4ItemStateChanged(evt);
            }
        });
        jCheckBoxAlarm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlarm4ActionPerformed(evt);
            }
        });
        jButtonAlarm4.setText("Edit");
        jButtonAlarm4.setEnabled(false);
        jButtonAlarm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlarm4ActionPerformed(evt);
            }
        });
        jTextAreaAlarm4.setEditable(false);
        jTextAreaAlarm4.setColumns(15);
        jTextAreaAlarm4.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaAlarm4.setRows(2);
        jScrollPane7.setViewportView(jTextAreaAlarm4);
        jSpinnerAlarm5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jSpinnerAlarm5.setEnabled(false);
        jLabel1.setText("minute:");
        jLabel3.setText("Hour:");
        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerAlarm5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAlarm4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerAlarm4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jCheckBoxAlarm4, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jCheckBoxAlarm4)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerAlarm4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerAlarm5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(16, 16, 16)
                .addComponent(jLabel7)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAlarm4)
                .addContainerGap())
        );
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>                        
    private void jCheckBoxAlarm1ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        
    }                                               
    private void jCheckBoxAlarm2ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        
    }                                               
    private void jCheckBoxAlarm3ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               
    private void jSpinnerAlarm1StateChanged(javax.swing.event.ChangeEvent evt) {                                            
        jSpinnerAlarm2Max = (Integer)jSpinnerAlarm1.getValue()-1;
        jSpinnerAlarm2.setModel(new SpinnerNumberModel(2, 0, jSpinnerAlarm2Max, 1));
        jSpinnerAlarm3.setModel(new SpinnerNumberModel(1, 0, jSpinnerAlarm2Max-1, 1));
        
    }                                           
    private void jSpinnerAlarm2StateChanged(javax.swing.event.ChangeEvent evt) {                                            
        int jSpinnerAlarm3Max = (Integer)jSpinnerAlarm2.getValue()-1;
        jSpinnerAlarm3.setModel(new SpinnerNumberModel(1, 1, jSpinnerAlarm3Max, 1));
   
    }                                           
    private void jButtonAlarm1MouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
    }                                          
    private void jButtonAlarm1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JTextArea area = jTextAreaAlarm1;
        TextBox box = new TextBox(this, area);
        box.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        box.setVisible(true);
    }                                             
    private void jButtonAlarm2ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JTextArea area = jTextAreaAlarm2;
        TextBox box = new TextBox(this, area);
        box.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        box.setVisible(true);
    }                                             
    private void jButtonAlarm3ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JTextArea area = jTextAreaAlarm3;
        TextBox box = new TextBox(this, area);
        box.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        box.setVisible(true);
    }                                             
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        int timeInterval;
        String text;
        HashMap<Integer, AlarmObj> map = new HashMap<Integer, AlarmObj>(3);
       
        String[] states = new String[4];
        String[] times = new String[4];
        String[] texts = new String[4];
        String time;
        
        for(int i = 0; i <= 3; i++){
            if(checkBoxes[i].isSelected()){
                states[i] = "On";
                timeInterval = (Integer) Spinners[i].getValue();
                if(i==3){
                    timeInterval = (Integer) Spinners[i].getValue();
                    time = timeInterval+"";
                    timeInterval = (Integer) Spinners[i+1].getValue();
                    time = timeInterval+":"+time;
                    times[i] =time;
                } else{
                    timeInterval = (Integer) Spinners[i].getValue();
                    times[i] = timeInterval+"";
                }
                
                text = textAreas[i].getText();
                texts[i] = text;
            } else {
                states[i] = "Off";
                if(i==3){
                    timeInterval = (Integer) Spinners[i].getValue();
                    time = timeInterval+"";
                    timeInterval = (Integer) Spinners[i+1].getValue();
                    time = timeInterval+":"+time;
                    times[i] =time;
                } else{
                    timeInterval = (Integer) Spinners[i].getValue();
                    times[i] = timeInterval+"";
                }
                text = textAreas[i].getText();
                texts[i] = text;
            }
        }
        
        GregorianCalendar calendar = new GregorianCalendar();
        parentApplication.setStart(calendar.get(Calendar.MINUTE),calendar.get(Calendar.SECOND));
        parentApplication.saveFile(states, times, texts);
        parentApplication.readFile();
        parentApplication.changeStart(true);
        parentApplication.stopBlinking();
        this.setVisible(false);
        this.dispose();
    }                                        
    private void jCheckBoxAlarm1StateChanged(javax.swing.event.ChangeEvent evt) {                                             
        if(jCheckBoxAlarm1.isSelected())
        {
            jSpinnerAlarm1.setEnabled(true);
            jButtonAlarm1.setEnabled(true);
        }
        else
        {
            jSpinnerAlarm1.setEnabled(false);
            jButtonAlarm1.setEnabled(false);
        }
    }                                            
    private void jCheckBoxAlarm2StateChanged(javax.swing.event.ChangeEvent evt) {                                             
        if(jCheckBoxAlarm2.isSelected())
        {
            jSpinnerAlarm2.setEnabled(true);
            jButtonAlarm2.setEnabled(true);
        }
        else
        {
            jSpinnerAlarm2.setEnabled(false);
            jButtonAlarm2.setEnabled(false);
        }
    }                                            
    private void jCheckBoxAlarm3StateChanged(javax.swing.event.ChangeEvent evt) {                                             
        if(jCheckBoxAlarm3.isSelected())
        {
            jSpinnerAlarm3.setEnabled(true);
            jButtonAlarm3.setEnabled(true);
        }
        else
        {
            jSpinnerAlarm3.setEnabled(false);
            jButtonAlarm3.setEnabled(false);
        }
    }                                            
    private void jCheckBoxAlarm4StateChanged(javax.swing.event.ChangeEvent evt) {                                             
       
 
        
    }                                            
    private void jCheckBoxAlarm4ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               
    private void jButtonAlarm4ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JTextArea area = jTextAreaAlarm4;
        TextBox box = new TextBox(this, area);
        box.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        box.setVisible(true);
    }                                             
    private void jCheckBoxAlarm4ItemStateChanged(java.awt.event.ItemEvent evt) {                                                 
         if(jCheckBoxAlarm4.isSelected())
        {
            jSpinnerAlarm4.setEnabled(true);
            jButtonAlarm4.setEnabled(true);
            jSpinnerAlarm5.setEnabled(true);
        }
        else
        {
            jSpinnerAlarm4.setEnabled(false);
            jSpinnerAlarm5.setEnabled(false);
            jButtonAlarm4.setEnabled(false);
        }
    }                                                
    /**
     * This method initializes arrays with the graphical
     * elements containing value;
     */
    private void initElementArrays(){
        checkBoxes = new JCheckBox[4];
        Spinners = new JSpinner[5];
        textAreas = new JTextArea[4];
        checkBoxes [0] = jCheckBoxAlarm1;
        checkBoxes [1] = jCheckBoxAlarm2;
        checkBoxes [2] = jCheckBoxAlarm3;
        checkBoxes [3] = jCheckBoxAlarm4;
        Spinners [0] = jSpinnerAlarm1;
        Spinners [1] = jSpinnerAlarm2;
        Spinners [2] = jSpinnerAlarm3;
        Spinners [3] = jSpinnerAlarm4;
        Spinners [4] = jSpinnerAlarm5;
        textAreas [0] = jTextAreaAlarm1;
        textAreas [1] = jTextAreaAlarm2;
        textAreas [2] = jTextAreaAlarm3;
        textAreas [3] = jTextAreaAlarm4;
    }
    
    private void getAlarmInfo()
    {
        Properties initialAlarmSettings = new Properties();
FileInputStream input = null;
        String alarmTime;
        String alarmState;
        String alarmText;
        String alarmNo;
        String alarmTimeProp = "_Time";
        String alarmStateProp = "_State";
        String alarmTextProp = "_Text";
        int minutes;
        int hours = 0;
        String clTime;
        
        try 
        {
            input = new FileInputStream("C:\\config.properties");
            initialAlarmSettings.load(input);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        
        for(int i = 1; i<=4; i++)
        {
            alarmNo = "Alarm" + i;
            alarmState = alarmNo + alarmStateProp;
            
            
                alarmTime = alarmNo + alarmTimeProp;
                if(i == 1)
                {    
                    minutes = Integer.parseInt((initialAlarmSettings.getProperty(alarmTime, "45")));
                }
                else if( i == 2)
                {
                    minutes = Integer.parseInt((initialAlarmSettings.getProperty(alarmTime, "15")));
                }
                else if ( i == 3)
                {
                    minutes = Integer.parseInt((initialAlarmSettings.getProperty(alarmTime, "5")));
                }             
                else 
                {
                    clTime = (initialAlarmSettings.getProperty(alarmTime, "12:15"));
                    String[] split = clTime.split(":");
                    //System.out.println(Arrays.toString(split));
                    hours = Integer.parseInt(split[0]);
                    minutes = Integer.parseInt(split[1]);
                }
                alarmText = alarmNo + alarmTextProp;
                
                // populate the respective graphical objects with alarm settings:
                if( initialAlarmSettings.getProperty(alarmState, "Off").equals("On") )
                {
                    checkBoxes[i-1].setSelected(true);
                    
                    
                }
                else
                {
                    checkBoxes[i-1].setSelected(false);
                }
                
                Spinners[i-1].setValue(minutes);
                if(i ==4)
                {
                    
                    Spinners[i].setValue(hours);
                }
                textAreas[i-1].setText(initialAlarmSettings.getProperty(alarmText, ""));
                              
        }       
        
    }
    
    BufferedImage alarmImage;
    private JCheckBox[] checkBoxes; 
    private JSpinner[] Spinners;
    private JTextArea[] textAreas;
    private App parentApplication;
    private int jSpinnerAlarm2Max;
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAlarm1;
    private javax.swing.JButton jButtonAlarm2;
    private javax.swing.JButton jButtonAlarm3;
    private javax.swing.JButton jButtonAlarm4;
    private javax.swing.JCheckBox jCheckBoxAlarm1;
    private javax.swing.JCheckBox jCheckBoxAlarm2;
    private javax.swing.JCheckBox jCheckBoxAlarm3;
    private javax.swing.JCheckBox jCheckBoxAlarm4;
    private javax.swing.JLabel jLabeAlarm2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelAlarm1;
    private javax.swing.JLabel jLabelAlarm3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinnerAlarm1;
    private javax.swing.JSpinner jSpinnerAlarm2;
    private javax.swing.JSpinner jSpinnerAlarm3;
    private javax.swing.JSpinner jSpinnerAlarm4;
    private javax.swing.JSpinner jSpinnerAlarm5;
    private javax.swing.JTextArea jTextAreaAlarm1;
    private javax.swing.JTextArea jTextAreaAlarm2;
    private javax.swing.JTextArea jTextAreaAlarm3;
    private javax.swing.JTextArea jTextAreaAlarm4;
    // End of variables declaration                   
}
